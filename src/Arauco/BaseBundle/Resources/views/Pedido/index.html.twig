{% extends '::base.html.twig' %}

{% block styleGrafico %}
	{{ parent() }}
	{% stylesheets 
            '@AraucoBaseBundle/Resources/public/css/jquery.jqplot.min.css' 
            filter='yui_css'%}
    <link rel="stylesheet" type="text/css"
          media="screen" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}

{% block scriptGrafico %}
  {{ parent() }}
	{% javascripts
        '@AraucoBaseBundle/Resources/public/js/jquery.jqplot.min.js'
        '@AraucoBaseBundle/Resources/public/js/jqplot.barRenderer.min.js'
        '@AraucoBaseBundle/Resources/public/js/jqplot.categoryAxisRenderer.min.js'
        '@AraucoBaseBundle/Resources/public/js/jqplot.pointLabels.min.js'
        filter='yui_js' %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}
	<script class="code" type="text/javascript">
			$(document).ready(function(){
  				var s1 = [2, 6, 7, 10];
  				var s2 = [7, 5, 3, 4];
  				var s3 = [14, 9, 3, 8];
  				plot3 = $.jqplot('chart3', [s1, s2, s3], {

					// Tell the plot to stack the bars.
    				stackSeries: true,
    				captureRightClick: true,
    				seriesDefaults:{
      					renderer:$.jqplot.BarRenderer,
      					rendererOptions: {
          					// Put a 30 pixel margin between bars.
          					barMargin: 30,
         					// Highlight bars when mouse button pressed.
          					// Disables default highlighting on mouse over.
          					highlightMouseDown: true    
      					},
      					pointLabels: {show: true}
    				},
    				axes: {
      					xaxis: {
          					renderer: $.jqplot.CategoryAxisRenderer
      					},
      					yaxis: {
        					// Don't pad out the bottom of the data range.  By default,
        					// axes scaled as if data extended 10% above and below the
        					// actual range to prevent data points right on grid boundaries.
        					// Don't want to do that here.
        					padMin:0
      					}
    				},
    				legend: {
      					show: true,
      					location: 'e',
      					placement: 'outside'
    				}      
  				});
  				// Bind a listener to the "jqplotDataClick" event.  Here, simply change
  				// the text of the info3 element to show what series and ponit were
  				// clicked along with the data for that point.
  				$('#chart3').bind('jqplotDataClick', 
    				function (ev, seriesIndex, pointIndex, data) {
      					//$('#info3').html('series: '+seriesIndex+', point: '+pointIndex+', data: '+data);
						document.location.href='#';
    				}
  				); 
			});
		</script>
{% endblock %}

{% block title %} Pedidos -{% endblock %}

{% block content %}
<div class="tab-content">
  {% block body %}
  <div class="tab-pane active" id="inicio">
    <div class="hero-unit">
      {% block titulo %}
      <h2>Arauco y Constituci√≥n S.A.</h2>
      {% endblock %}
      <h4><i>Sembremos futuro</i></h4>
      <p>Pedido</p>
      </br>
	<p class="text">Click on a bar in the plot below to update the text box.</p>

			<p class="text">You Clicked: 
			<span id="info3">Nothing yet.</span>

		</p>

		<div id="chart3" style="width:800px; height:300px;"></div>

	</br></br>
    </div> <!-- hero-unit -->
  </div> <!-- tab-pane active -->
  {% endblock %}
</div> <!-- tab-content -->
{% endblock %}
